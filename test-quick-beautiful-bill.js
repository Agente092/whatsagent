/**
 * ‚ö° PRUEBA R√ÅPIDA: Beautiful Bill
 * Script simple para probar si las correcciones funcionan
 */

require('dotenv').config()

const GeminiService = require('./server/services/gemini')
const KnowledgeBase = require('./server/services/knowledgeBase')

async function quickTest() {
  console.log('‚ö° PRUEBA R√ÅPIDA: Beautiful Bill')
  console.log('==============================\n')
  
  const knowledgeBase = new KnowledgeBase()
  const geminiService = new GeminiService(null, null, knowledgeBase)
  
  const message = "Tienes conocimiento sobre la ley One Beautiful Bill tax?"
  
  // 1. Verificar detecci√≥n
  const detected = geminiService.needsRealTimeSearch(message)
  console.log(`üîç Detecci√≥n: ${detected ? '‚úÖ ACTIVADA' : '‚ùå FALL√ì'}`)
  
  // 2. Verificar keywords
  const keywords = geminiService.extractSearchKeywords(message)
  console.log(`üéØ Keywords: "${keywords}"`)
  
  // 3. Test de b√∫squeda
  console.log('\nüåê Probando b√∫squeda...')
  try {
    const results = await geminiService.internetSearch.search(keywords)
    console.log(`‚úÖ B√∫squeda exitosa: ${results.length} caracteres`)
    
    // Verificar contenido relevante
    const relevant = results.toLowerCase().includes('beautiful') || 
                    results.toLowerCase().includes('bill')
    console.log(`üìä Contenido relevante: ${relevant ? '‚úÖ S√ç' : '‚ùå NO'}`)
    
  } catch (error) {
    console.log(`‚ùå Error b√∫squeda: ${error.message}`)
  }
  
  console.log('\n‚úÖ CORRECCIONES APLICADAS:')
  console.log('- Instrucciones m√°s enf√°ticas en prompt')
  console.log('- Alerta cr√≠tica al inicio para priorizar b√∫squeda')
  console.log('- Detecci√≥n mejorada para t√©rminos mixtos')
  
  console.log('\nüîÑ PR√ìXIMO PASO: Reiniciar servidor y probar')
}

quickTest().catch(console.error)
/**
 * ü§ñ SISTEMA DE PREGUNTAS DE SEGUIMIENTO INTELIGENTES
 * Genera preguntas espec√≠ficas basadas en resultados de b√∫squeda para mejorar la atenci√≥n personalizada
 */

class IntelligentFollowUpSystem {
  constructor() {
    // üéØ Patrones de preguntas seg√∫n el tipo de consulta
    this.questionPatterns = {
      // Tratados de doble imposici√≥n
      double_taxation_treaties: [
        "¬øCon cu√°l de estos pa√≠ses te interesa que profundicemos la investigaci√≥n?",
        "¬øTienes alg√∫n pa√≠s espec√≠fico en mente para tu estructura fiscal?",
        "¬øQu√© tipo de ingresos generas que podr√≠an beneficiarse de estos tratados?",
        "¬øEst√°s considerando establecer presencia comercial en alguno de estos pa√≠ses?"
      ],
      
      // Leyes internacionales
      international_laws: [
        "¬øTe interesa implementar alguna de estas leyes espec√≠ficamente?",
        "¬øQu√© sector empresarial te gustar√≠a enfocar con estas regulaciones?",
        "¬øNecesitas una estrategia de implementaci√≥n paso a paso?",
        "¬øTienes alg√∫n marco temporal espec√≠fico para aprovechar estas oportunidades?"
      ],
      
      // Oportunidades de inversi√≥n
      investment_opportunities: [
        "¬øCu√°l es tu presupuesto aproximado para esta inversi√≥n?",
        "¬øPrefieres inversiones de corto o largo plazo?",
        "¬øTienes experiencia previa invirtiendo en el extranjero?",
        "¬øQu√© nivel de riesgo est√°s dispuesto a asumir?"
      ],
      
      // Informaci√≥n de pa√≠ses
      country_information: [
        "¬øTe interesa alg√∫n pa√≠s en particular de esta lista?",
        "¬øQu√© tipo de actividad empresarial planeas desarrollar?",
        "¬øNecesitas informaci√≥n sobre requisitos espec√≠ficos para alguno de estos pa√≠ses?",
        "¬øTe gustar√≠a una comparativa detallada entre algunos de estos pa√≠ses?"
      ],
      
      // Estrategias fiscales
      tax_strategies: [
        "¬øCu√°l es tu estructura empresarial actual?",
        "¬øQu√© monto de facturaci√≥n anual manejas aproximadamente?",
        "¬øYa tienes alguna estructura offshore establecida?",
        "¬øTe interesa optimizaci√≥n fiscal local o internacional?"
      ]
    }
  }

  /**
   * üéØ ANALIZAR RESULTADOS DE B√öSQUEDA Y GENERAR PREGUNTAS ESPEC√çFICAS
   */
  generateFollowUpQuestions(userMessage, searchResults, searchQuery) {
    const lowerMessage = userMessage.toLowerCase()
    const detectedCategory = this.detectQueryCategory(lowerMessage, searchResults)
    
    console.log(`üéØ Categor√≠a detectada: ${detectedCategory}`)
    console.log(`üîç Query de b√∫squeda: ${searchQuery}`)
    
    // Generar preguntas basadas en la categor√≠a y resultados
    const baseQuestions = this.questionPatterns[detectedCategory] || this.questionPatterns.country_information
    
    // Personalizar preguntas seg√∫n el contenido espec√≠fico de los resultados
    const personalizedQuestions = this.personalizeQuestions(baseQuestions, searchResults, userMessage)
    
    return {
      category: detectedCategory,
      questions: personalizedQuestions.slice(0, 3), // M√°ximo 3 preguntas
      searchSummary: this.generateSearchSummary(searchResults)
    }
  }

  /**
   * üîç DETECTAR CATEGOR√çA DE LA CONSULTA
   */
  detectQueryCategory(message, searchResults) {
    // Patrones para detectar el tipo de consulta
    if (message.includes('doble imposici√≥n') || message.includes('tratado') || message.includes('convenio fiscal')) {
      return 'double_taxation_treaties'
    }
    
    if (message.includes('ley') || message.includes('regulaci√≥n') || message.includes('normativa')) {
      return 'international_laws'
    }
    
    if (message.includes('inversi√≥n') || message.includes('invertir') || message.includes('capital')) {
      return 'investment_opportunities'
    }
    
    if (message.includes('pa√≠ses que') || message.includes('qu√© pa√≠ses') || message.includes('cu√°les pa√≠ses')) {
      return 'country_information'
    }
    
    if (message.includes('fiscal') || message.includes('impuesto') || message.includes('tributario')) {
      return 'tax_strategies'
    }
    
    // Categor√≠a por defecto
    return 'country_information'
  }

  /**
   * üé® PERSONALIZAR PREGUNTAS SEG√öN RESULTADOS ESPEC√çFICOS
   */
  personalizeQuestions(baseQuestions, searchResults, userMessage) {
    const personalizedQuestions = []
    
    // Analizar resultados para encontrar pa√≠ses, n√∫meros espec√≠ficos, etc.
    const mentionedCountries = this.extractCountriesFromResults(searchResults)
    const mentionedNumbers = this.extractNumbersFromResults(searchResults)
    
    for (const question of baseQuestions) {
      let personalizedQuestion = question
      
      // Si hay pa√≠ses espec√≠ficos mencionados, personalizar la pregunta
      if (mentionedCountries.length > 0 && question.includes('pa√≠ses')) {
        const countryList = mentionedCountries.slice(0, 3).join(', ')
        personalizedQuestion = `¬øTe interesa profundizar en alguno de estos pa√≠ses espec√≠ficamente: ${countryList}?`
      }
      
      // Si hay n√∫meros espec√≠ficos (tasas, porcentajes), mencionarlos
      if (mentionedNumbers.length > 0 && question.includes('beneficio')) {
        personalizedQuestion = `Considerando las tasas mencionadas (${mentionedNumbers.join(', ')}), ¬øqu√© estructura te parece m√°s atractiva?`
      }
      
      personalizedQuestions.push(personalizedQuestion)
    }
    
    return personalizedQuestions
  }

  /**
   * üåç EXTRAER PA√çSES MENCIONADOS EN LOS RESULTADOS
   */
  extractCountriesFromResults(searchResults) {
    const countries = []
    const countryPatterns = [
      'Estados Unidos', 'Canad√°', 'M√©xico', 'Brasil', 'Argentina', 'Chile', 'Colombia',
      'Espa√±a', 'Francia', 'Alemania', 'Italia', 'Reino Unido', 'Suiza', 'Luxemburgo',
      'Panam√°', 'Costa Rica', 'Uruguay', 'Singapur', 'Hong Kong', 'Australia'
    ]
    
    if (typeof searchResults === 'string') {
      for (const country of countryPatterns) {
        if (searchResults.toLowerCase().includes(country.toLowerCase())) {
          countries.push(country)
        }
      }
    }
    
    return [...new Set(countries)] // Eliminar duplicados
  }

  /**
   * üìä EXTRAER N√öMEROS Y PORCENTAJES DE LOS RESULTADOS
   */
  extractNumbersFromResults(searchResults) {
    const numbers = []
    
    if (typeof searchResults === 'string') {
      // Buscar porcentajes
      const percentageMatches = searchResults.match(/\d+(?:\.\d+)?%/g)
      if (percentageMatches) {
        numbers.push(...percentageMatches)
      }
      
      // Buscar tasas fiscales
      const taxRateMatches = searchResults.match(/tasa del? \d+(?:\.\d+)?%/gi)
      if (taxRateMatches) {
        numbers.push(...taxRateMatches)
      }
    }
    
    return [...new Set(numbers)]
  }

  /**
   * üìã GENERAR RESUMEN DE RESULTADOS DE B√öSQUEDA
   */
  generateSearchSummary(searchResults) {
    if (typeof searchResults !== 'string' || searchResults.length < 100) {
      return 'Se encontr√≥ informaci√≥n relevante para tu consulta.'
    }
    
    // Extraer primeras 2-3 oraciones como resumen
    const sentences = searchResults.split('.').filter(s => s.trim().length > 20)
    const summary = sentences.slice(0, 2).join('. ') + '.'
    
    return summary.length > 300 ? summary.substring(0, 300) + '...' : summary
  }

  /**
   * üöÄ GENERAR RESPUESTA COMPLETA CON PREGUNTAS DE SEGUIMIENTO
   */
  generateCompleteResponse(userMessage, searchResults, searchQuery) {
    const followUp = this.generateFollowUpQuestions(userMessage, searchResults, searchQuery)
    
    let response = `Bas√°ndome en la informaci√≥n m√°s actualizada encontrada:\n\n`
    
    // Agregar resumen de resultados
    response += `${followUp.searchSummary}\n\n`
    
    // Agregar preguntas de seguimiento
    response += `Para brindarte una asesor√≠a m√°s personalizada y espec√≠fica, me gustar√≠a conocer:\n\n`
    
    followUp.questions.forEach((question, index) => {
      response += `${index + 1}. ${question}\n`
    })
    
    response += `\nüí° Con esta informaci√≥n podr√© dise√±ar una estrategia integral espec√≠fica para tu situaci√≥n y objetivos.`
    
    return response
  }
}

module.exports = IntelligentFollowUpSystem
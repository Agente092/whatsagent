/**
 * üîß SISTEMA DE FORMATEO PROFESIONAL CORREGIDO
 * Soluci√≥n a los problemas de formateo identificados:
 * 1. Eliminar emojis + texto hardcodeados (üí∞ Costo:, ‚ö†Ô∏è Riesgo:)
 * 2. Corregir asteriscos mal colocados (*Holding*-Operadora:*)
 * 3. Limpiar texto repetitivo de estructuras empresariales
 * 4. Mejorar legibilidad y organizaci√≥n visual
 */

class MessageFormatterCleaned {
  constructor() {
    this.maxMessageLength = 4000 // WhatsApp limit es ~4096 caracteres
    this.preferredLength = 3500 // Dejar buffer de seguridad
  }

  /**
   * üéØ FORMATEAR RESPUESTA CON ESTILO LIMPIO Y PROFESIONAL
   */
  formatResponse(text, context = {}) {
    let formatted = this.cleanText(text)
    
    // Aplicar √∫nicamente formateo limpio sin hardcode
    formatted = this.applyCleanFormatting(formatted)
    
    // Dividir en mensajes si es muy largo
    return this.splitIntoMessages(formatted)
  }

  /**
   * üßπ LIMPIAR TEXTO BASE - VERSI√ìN CORREGIDA
   */
  cleanText(text) {
    let cleaned = text.trim()
    
    // Remover menciones de IA
    cleaned = cleaned.replace(/como (ia|inteligencia artificial|ai|bot|asistente virtual)/gi, 'como asesor especializado')
    cleaned = cleaned.replace(/soy una? (ia|inteligencia artificial|ai|bot)/gi, 'soy un asesor empresarial')
    
    // üîß ARREGLAR PROBLEMAS DE FORMATEO IDENTIFICADOS
    
    // 1. ELIMINAR EMOJIS + TEXTO HARDCODEADOS PROBLEM√ÅTICOS
    cleaned = cleaned.replace(/üí∞\s*Costo:\s*/gi, '') // Eliminar "üí∞ Costo:"
    cleaned = cleaned.replace(/‚ö†Ô∏è\s*Riesgo:\s*/gi, '') // Eliminar "‚ö†Ô∏è Riesgo:"
    cleaned = cleaned.replace(/‚úÖ\s*Ventaja:\s*/gi, '') // Eliminar "‚úÖ Ventaja:"
    cleaned = cleaned.replace(/üéØ\s*Recomendaci√≥n:\s*/gi, '') // Eliminar "üéØ Recomendaci√≥n:"
    
    // 2. ARREGLAR ASTERISCOS MAL COLOCADOS
    // Problema: *Holding*-Operadora:* -> Soluci√≥n: *Holding-Operadora:*
    cleaned = cleaned.replace(/\*([A-Za-z]+)\*-([A-Za-z]+):\*/g, '*$1-$2:*')
    
    // 3. LIMPIAR TEXTO REPETITIVO DE ESTRUCTURAS EMPRESARIALES
    // Eliminar repeticiones como "üè¢ *üè¢ *S.A.C*"
    cleaned = cleaned.replace(/üè¢\s*\*üè¢\s*\*/g, 'üè¢ *')
    cleaned = cleaned.replace(/üë§\s*\*üë§\s*\*/g, 'üë§ *')
    
    // 4. CONVERTIR DOBLE ASTERISCO A SIMPLE PARA WHATSAPP
    cleaned = cleaned.replace(/\*\*([^*]+)\*\*/g, '*$1*')
    
    // 5. LIMPIAR FORMATO INCONSISTENTE
    cleaned = cleaned.replace(/\*{3,}/g, '*') // M√∫ltiples asteriscos a uno solo
    cleaned = cleaned.replace(/\n{3,}/g, '\n\n') // M√∫ltiples saltos de l√≠nea
    cleaned = cleaned.replace(/\s{3,}/g, ' ') // M√∫ltiples espacios
    
    // 6. LIMPIAR REPETICIONES DE ESTRUCTURAS EMPRESARIALES
    cleaned = cleaned.replace(/\(üè¢\s*\*S\.A\.\s*\(Sociedad An√≥nima\)\*\s*Cerrada\)\*\s*\(üè¢\s*\*üè¢\s*\*S\.A\.\s*\(Sociedad An√≥nima\)\*C\.\s*\(üè¢\s*\*S\.A\.\s*\(Sociedad An√≥nima\)\*\s*Cerrada\)\*\)/g, '*S.A.C. (Sociedad An√≥nima Cerrada)*')
    
    return cleaned
  }

  /**
   * üé® APLICAR FORMATEO LIMPIO SIN HARDCODE
   */
  applyCleanFormatting(text) {
    let formatted = text

    // üö® APLICAR REGLAS ESTRICTAS DE FORMATO PARA WHATSAPP
    formatted = this.applyStrictWhatsAppFormatting(formatted)

    // ==================== SOLO T√çTULOS Y SECCIONES LIMPIAS ====================
    // Mejorar t√≠tulos principales sin agregar texto hardcodeado
    formatted = formatted.replace(/^([A-Z√Å√â√ç√ì√ö][^:\n]{15,60}):$/gm, '\n*$1:*\n')
    
    // ==================== LISTAS LIMPIAS ====================
    formatted = formatted.replace(/^- /gm, '‚Ä¢ ')
    formatted = formatted.replace(/^\* /gm, '‚Ä¢ ')
    formatted = formatted.replace(/^\d+\. /gm, '‚Ä¢ ')

    // ==================== ESTRUCTURAS EMPRESARIALES LIMPIAS Y CORRECTAS ====================
    // üîß CORRECI√ìN CR√çTICA: Formateo correcto de tipos de empresas en Per√∫
    
    // Limpiar malformaciones existentes primero
    formatted = formatted.replace(/üè¢\s*üè¢\s*/g, 'üè¢ ') // Eliminar emojis duplicados
    formatted = formatted.replace(/\*S\.A\.\s*\(Sociedad An√≥nima\)\*C/g, 'Sociedad An√≥nima Cerrada (S.A.C.)') // Arreglar S.A.C. malformada espec√≠fica
    formatted = formatted.replace(/\(S\.A\.\)\*?C/g, '(S.A.C.)') // Arreglar formato incorrecto (S.A.)C
    
    // Formateo correcto seg√∫n la legislaci√≥n peruana - ORDEN CR√çTICO: S.A.C. ANTES que S.A.
    // üö® CORRECCI√ìN CR√çTICA: Evitar duplicaciones usando negative lookaheads
    formatted = formatted.replace(/\b(S\.A\.C\.|SAC)\b(?!.*\(S\.A\.C\.\))/gi, 'Sociedad An√≥nima Cerrada (S.A.C.)')
    formatted = formatted.replace(/\bSociedad An√≥nima Cerrada\b(?!.*\(S\.A\.C\.\))/gi, 'Sociedad An√≥nima Cerrada (S.A.C.)')
    
    formatted = formatted.replace(/\b(S\.A\.A\.|SAA)\b(?!.*\(S\.A\.A\.\))/gi, 'Sociedad An√≥nima Abierta (S.A.A.)')
    formatted = formatted.replace(/\bSociedad An√≥nima Abierta\b(?!.*\(S\.A\.A\.\))/gi, 'Sociedad An√≥nima Abierta (S.A.A.)')
    
    formatted = formatted.replace(/\b(S\.R\.L\.|SRL)\b(?!.*\(S\.R\.L\.\))/gi, 'Sociedad Comercial de Responsabilidad Limitada (S.R.L.)')
    formatted = formatted.replace(/\bSociedad Comercial de Responsabilidad Limitada\b(?!.*\(S\.R\.L\.\))/gi, 'Sociedad Comercial de Responsabilidad Limitada (S.R.L.)')
    
    formatted = formatted.replace(/\b(E\.I\.R\.L\.|EIRL)\b(?!.*\(E\.I\.R\.L\.\))/gi, 'Empresa Individual de Responsabilidad Limitada (E.I.R.L.)')
    formatted = formatted.replace(/\bEmpresa Individual de Responsabilidad Limitada\b(?!.*\(E\.I\.R\.L\.\))/gi, 'Empresa Individual de Responsabilidad Limitada (E.I.R.L.)')
    
    // IMPORTANTE: S.A. al final para no interferir con S.A.C. y S.A.A.
    formatted = formatted.replace(/\b(S\.A\.|SA)\b(?!\s*[AC]|\s*\(|\s*Cerrada|\s*Abierta|.*\(S\.A\.\))/gi, 'Sociedad An√≥nima (S.A.)')
    formatted = formatted.replace(/\bSociedad An√≥nima\b(?!\s*Cerrada|\s*Abierta|.*\(S\.A\.\))/gi, 'Sociedad An√≥nima (S.A.)')
    
    // Tipos adicionales de empresas en Per√∫ - CON PROTECCI√ìN ANTI-DUPLICACI√ìN
    formatted = formatted.replace(/\b(S\. en C\.S\.)\b(?!.*\(S\. en C\.S\.\))/gi, 'Sociedad en Comandita Simple (S. en C.S.)')
    formatted = formatted.replace(/\bSociedad en Comandita Simple\b(?!.*\(S\. en C\.S\.\))/gi, 'Sociedad en Comandita Simple (S. en C.S.)')
    
    formatted = formatted.replace(/\b(S\. en C\.P\.A\.)\b(?!.*\(S\. en C\.P\.A\.\))/gi, 'Sociedad en Comandita por Acciones (S. en C.P.A.)')
    formatted = formatted.replace(/\bSociedad en Comandita por Acciones\b(?!.*\(S\. en C\.P\.A\.\))/gi, 'Sociedad en Comandita por Acciones (S. en C.P.A.)')
    
    formatted = formatted.replace(/\b(S\.C\.)\b(?!.*\(S\.C\.\))/gi, 'Sociedad Colectiva (S.C.)')
    formatted = formatted.replace(/\bSociedad Colectiva\b(?!.*\(S\.C\.\))/gi, 'Sociedad Colectiva (S.C.)')

    // ==================== ESPACIADO PROFESIONAL ====================
    // Asegurar espaciado adecuado despu√©s de t√≠tulos
    formatted = formatted.replace(/(\*[^*]+\*:)\n([^\n])/g, '$1\n\n$2')
    
    return formatted
  }

  /**
   * üì± REGLAS ESTRICTAS DE FORMATO PARA WHATSAPP - VERSI√ìN FINAL PERFECCIONADA
   * Soluci√≥n definitiva al problema de texto amontonado
   */
  applyStrictWhatsAppFormatting(text) {
    let formatted = text.trim()
    
    console.log('üîß Aplicando reglas estrictas de formato...')

    // üö® PASO 1: SEPARAR T√çTULOS PRINCIPALES DE GUIONES
    formatted = formatted.replace(/(‚Ä¢ [^:]+:)\s*-\s*/g, '$1\n\n  - ')
    
    // üö® PASO 2: SEPARAR SUBT√çTULOS DE SU CONTENIDO
    formatted = formatted.replace(/(-\s*[^:]+:)\s*([A-Z√Å√â√ç√ì√ö][^.]*\.)/g, '$1\n    $2')
    
    // üö® PASO 3: INDENTAR SUBT√çTULOS QUE EMPIEZAN CON GUI√ìN
    formatted = formatted.replace(/^-\s*/gm, '  - ')
    
    // üö® PASO 4: SEPARAR ORACIONES LARGAS EN M√öLTIPLES SUBT√çTULOS
    formatted = formatted.replace(/\.\s*-\s*/g, '.\n\n  - ')
    
    // üö® PASO 5: ESPACIAR ENTRE SECCIONES PRINCIPALES
    formatted = formatted.replace(/\.\s*\n\s*(‚Ä¢ [A-Z√Å√â√ç√ì√ö])/g, '.\n\n$1')
    
    // üö® PASO 6: ASEGURAR CONTENIDO INDENTADO BAJO SUBT√çTULOS
    formatted = formatted.replace(/(  - [^:]+:)\n([A-Z√Å√â√ç√ì√ö])/g, '$1\n    $2')
    
    // üö® PASO 7: ESPACIAR SUBT√çTULOS CONSECUTIVOS
    formatted = formatted.replace(/(\.)\n(  - [^:]+:)/g, '$1\n\n$2')
    
    // üö® PASO 8: CONVERTIR ESPACIOS M√öLTIPLES A SALTOS DE L√çNEA
    // Esto es cr√≠tico: cambiar los 4 espacios por saltos de l√≠nea + indentaci√≥n
    formatted = formatted.replace(/    - /g, '\n\n  - ')
    formatted = formatted.replace(/    ([A-Z√Å√â√ç√ì√ö])/g, '\n    $1')
    
    // üö® PASO 9: LIMPIAR INDENTACIONES INCORRECTAS SOLO DE T√çTULOS
    formatted = formatted.replace(/^\s+(‚Ä¢)/gm, '$1')
    
    // üö® PASO 10: NORMALIZAR ESPACIADO M√öLTIPLE FINAL
    formatted = formatted.replace(/\n{4,}/g, '\n\n\n')
    
    console.log('‚úÖ Reglas aplicadas exitosamente')
    
    return formatted
  }

  /**
   * üì± DIVIDIR MENSAJE EN PARTES SI ES MUY LARGO
   */
  splitIntoMessages(text) {
    if (text.length <= this.preferredLength) {
      return [text]
    }

    const messages = []
    const paragraphs = text.split('\n\n')
    let currentMessage = ''
    let messageIndex = 1

    for (const paragraph of paragraphs) {
      if (paragraph.length > this.preferredLength) {
        const sentences = this.splitBySentences(paragraph)
        
        for (const sentence of sentences) {
          if ((currentMessage + sentence).length > this.preferredLength) {
            if (currentMessage.trim()) {
              messages.push(this.addMessageFooter(currentMessage.trim(), messageIndex, true))
              messageIndex++
              currentMessage = sentence + '\n\n'
            }
          } else {
            currentMessage += sentence + ' '
          }
        }
      } else {
        if ((currentMessage + paragraph + '\n\n').length > this.preferredLength) {
          if (currentMessage.trim()) {
            messages.push(this.addMessageFooter(currentMessage.trim(), messageIndex, true))
            messageIndex++
            currentMessage = paragraph + '\n\n'
          }
        } else {
          currentMessage += paragraph + '\n\n'
        }
      }
    }

    if (currentMessage.trim()) {
      messages.push(this.addMessageFooter(currentMessage.trim(), messageIndex, false))
    }

    return messages
  }

  /**
   * ‚úÇÔ∏è DIVIDIR POR ORACIONES
   */
  splitBySentences(text) {
    return text.match(/[^\.!?]+[\.!?]+/g) || [text]
  }

  /**
   * üìÑ AGREGAR PIE DE MENSAJE LIMPIO
   */
  addMessageFooter(message, index, hasMore) {
    if (hasMore) {
      return `${message}\n\n*Contin√∫a en el siguiente mensaje... (${index})*`
    } else if (index > 1) {
      return `${message}\n\n*Consulta completa (${index}/${index})*\n\n¬øTe gustar√≠a profundizar en alg√∫n aspecto espec√≠fico?`
    } else {
      return `${message}\n\n¬øHay alg√∫n otro tema en el que pueda ayudarte?`
    }
  }

  /**
   * üëã FORMATEAR MENSAJE DE BIENVENIDA LIMPIO
   */
  formatWelcomeMessage(clientName, specialties = []) {
    const defaultSpecialties = [
      'Estrategias financieras avanzadas y apalancamiento',
      'Estructuras offshore y blindaje patrimonial', 
      'Holdings internacionales y optimizaci√≥n fiscal',
      'Expansi√≥n empresarial desde Per√∫',
      'Fideicomisos y fundaciones privadas',
      'Compliance y estructuras regulatorias',
      'M√©todos de elusi√≥n fiscal internacional',
      'Arbitraje jurisdiccional y para√≠sos fiscales',
      'Transfer pricing y precios de transferencia',
      'Planificaci√≥n sucesoria multinacional'
    ]

    const availableSpecialties = specialties.length > 0 ? specialties : defaultSpecialties

    return `¬°Hola ${clientName}!

*Soy tu Asesor Empresarial Especializado*

Estoy aqu√≠ para brindarte estrategias inteligentes y soluciones empresariales de alto nivel adaptadas a la realidad peruana.

*MIS ESPECIALIDADES:*

${availableSpecialties.map(specialty => `‚Ä¢ ${specialty}`).join('\n')}

*¬øC√≥mo puedo ayudarte hoy?*

Puedes consultarme sobre cualquier tema empresarial, fiscal, tributario o de inversiones. Estoy preparado para darte respuestas detalladas y estrategias espec√≠ficas.

*¬°Comencemos a optimizar tu estructura empresarial!*`
  }

  /**
   * üìä FORMATEAR RESPUESTA FISCAL LIMPIA
   */
  formatFiscalResponse(text, fiscalContext = {}) {
    let formatted = text

    // Solo formatear t√©rminos fiscales importantes sin texto hardcodeado
    formatted = formatted.replace(/\b(IGV|Impuesto General a las Ventas)\b/gi, '*IGV (Impuesto General a las Ventas)*')
    formatted = formatted.replace(/\b(MYPE)\b/gi, '*MYPE (Micro y Peque√±a Empresa)*')
    formatted = formatted.replace(/\b(RUC)\b/gi, '*RUC (Registro √önico de Contribuyentes)*')

    return this.formatResponse(formatted, fiscalContext)
  }

  /**
   * üè¢ FORMATEAR RESPUESTA EMPRESARIAL LIMPIA
   */
  formatCorporateResponse(text, corporateContext = {}) {
    let formatted = text

    // Aplicar formateo limpio de estructuras empresariales
    return this.formatResponse(formatted, corporateContext)
  }

  /**
   * ‚ö†Ô∏è FORMATEAR MENSAJE DE ERROR LIMPIO
   */
  formatErrorMessage(error) {
    return `*Disculpa las molestias*

Estoy experimentando dificultades t√©cnicas temporales en mi sistema de asesor√≠a.

*Por favor:*
‚Ä¢ Intenta reformular tu consulta empresarial
‚Ä¢ O contacta directamente con nuestro equipo especializado

Estoy aqu√≠ para asesorarte en cuanto se resuelva el inconveniente t√©cnico.

*Tu √©xito empresarial es nuestra prioridad.*`
  }
}

module.exports = MessageFormatterCleaned
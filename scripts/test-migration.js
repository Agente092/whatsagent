#!/usr/bin/env node

/**
 * üß™ Script de prueba para verificar la migraci√≥n de ClientService a Prisma
 */

const ClientService = require('../server/services/clientService')

async function testMigration() {
  console.log('üß™ Probando migraci√≥n de ClientService a Prisma...')
  
  try {
    const clientService = new ClientService()
    
    // Esperar un momento para la inicializaci√≥n
    await new Promise(resolve => setTimeout(resolve, 1000))
    
    console.log('1Ô∏è‚É£ Creando cliente de prueba...')
    const testClient = await clientService.getOrCreateClient('51998148917', 'Hola, soy Luis')
    console.log('‚úÖ Cliente creado:', JSON.stringify(testClient, null, 2))
    
    console.log('2Ô∏è‚É£ Obteniendo todos los clientes...')
    const allClients = await clientService.getAllClients()
    console.log('‚úÖ Total de clientes:', allClients.length)
    console.log('üìã Lista:', allClients.map(c => `${c.name} (${c.phoneNumber})`))
    
    console.log('3Ô∏è‚É£ Actualizando nombre del cliente...')
    await clientService.updateClientName('51998148917', 'Luis Gonz√°lez')
    
    console.log('4Ô∏è‚É£ Promocionando a VIP...')
    const vipClient = await clientService.promoteToVIP('51998148917')
    console.log('‚úÖ Cliente VIP:', vipClient ? vipClient.name : 'Error')
    
    console.log('5Ô∏è‚É£ Obteniendo estad√≠sticas...')
    const stats = await clientService.getStats()
    console.log('‚úÖ Estad√≠sticas:', stats)
    
    console.log('üéâ ¬°Migraci√≥n exitosa! El sistema ahora usa Prisma.')
    
  } catch (error) {
    console.error('‚ùå Error en la migraci√≥n:', error)
    process.exit(1)
  }
}

testMigration()